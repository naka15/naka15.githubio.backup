---
layout: post
comments: true
title:  "Welcome to Jekyll!"
date:   2017-01-15 16:40:00
categories: spring
tags: spring
image: /images/pic03.jpg
---  

# 토비의 스프링  
## 스프링이란  
- 자바 엔터프라이즈 애플리케이션 개발에 사용되는 애플리케이션 프레임워크
- 아래와 같은 세 가지 기능 제공
  * 스프링 컨테이
  	* 애플리케이션을 구성하는 오브젝트 생성, 관리
  * 공통 프로그래밍 모델 - IoC/DI, 서비스 추상화, AOP  
    * IOC/DI : 오브젝트의 생명주기 의존관계에 대한 프로그래밍 모델  
    * 서비스 추상화 : 특정 기술에 종속 되지 않고 이식성이 우수함   
    * AOP : 부가기능 독립적 모듈화  
  * 기술 API
  	* 다양한 기술 API 제공    
   
## 1장 오브젝트와 의존관계  
  - JDBC 이용한 DB 연결 순서  
    * Connection 생성 -> SQL 생성 -> SQL 실행 -> 조회인 경우, 결과를 ResultSet으로 받아 반환 -> 작업 완료 후(에러 처리 시에도 예외 처리로), Connection, Statement, ResultSet Close -> 예외 처리  
  - 코드 개선 - 메소드 추출 리팩토링  
    * 관심사 분리
    * 중복 코드 분리
    * 검증
### 1.5 스프링의 IoC  
  * 빈 bean
     - 스프링이 제어권을 가지고 직접 만들고 관계를 부여하는 오브젝트
     - 제어의 역전이 적용된 오브젝트
  * 빈 팩토리
     - 빈의 생성과 관계설정 같은 제어를 담당하는 IoC 오브젝트
  * 애플리케이션 컨텍스트의 동작방식
     - 클라이언트 요청 -> 앱컨텍스트 빈 조회 후 생성 요청 -> configuration 찾아서 생성하고 등록 -> 클라이언트 사용
  * 애플리케이션 컨텍스트 장점
     - 클라이언트는 구체적인 클래스를 알 필요가 없다
     - 종합 IoC 서비스 제공
     - 다양한 빈 검색 방법 제공
### 용어 정리  
   * 템플릿 메소드 패턴
     - 슈퍼클래스의 기능 일부를 추상 메소드나 오버라이딩 가능한 메소드로 만든 뒤 서브 클래스에서 구현
   * 팩토리 메소드 패턴
     - 템플릿 메소드보다 구체적
     - 서브클래스에서 오브젝트 생성 방법을 결정
### 1장 핵심
   * 개방 폐쇄 원칙
       - 클래스나 모듈은 확장에는 open, 변경에는 close
   * 높은 응집도
       - 높은 응집도
           + 변화가 일어날 때 많은 부분이 함께 변경되며 어느 부분이 변경될지 명확함
           + 다른 클래스의 수정을 요구하지 않음
       - 낮은 결합도
           + 하나의 오브젝트가 변경되어도 연결된 다른 오브젝트에게 변화를 요구하는 정도가 낮음(독립적임)
   * IOC
       - 제어의 역전, 프로그램의 제어 흐름 구조가 바뀜 
           + ex) ConnectionMaker 제어권 : userDao -> DaoFactory
